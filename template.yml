AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: Reddit Subtopic Cache

Resources:
  GetSubtopic:
    Type: AWS::Serverless::Function
    Properties:
      Handler: org.yajac.reddit.lambda.RedditCacheReadHandler
      Runtime: java8
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /{subtopic}
            Method: get
  CacheSubTopic:
    Type: AWS::Serverless::Function
    Properties:
      Handler: org.yajac.reddit.lambda.RedditCacheWriteHandler
      Runtime: java8
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        PutEvent:
          Type: Api
          Properties:
            Path: /{subtopic}
            Method: put
  CacheReadResponse:
    Type: "AWS::ApiGateway::Model"
    Properties:
      RestApiId:
            Ref: "GetEvent"
      ContentType: "application/json"
      Description: "Schema for CacheReadResponse"
      Name: CacheReadResponse
      Schema:
        "$schema": "http://json-schema.org/draft-04/schema#"
        title: CacheReadResponse
        type: array
        items:
          type: object
    CacheWriteResponse:
      Type: "AWS::ApiGateway::Model"
      Properties:
        RestApiId:
              Ref: "PutEvent"
        ContentType: "application/json"
        Description: "Schema for CacheWriteResponse"
        Name: CacheWriteResponse
        Schema:
          "$schema": "http://json-schema.org/draft-04/schema#"
          title: CacheWriteResponse
          type: object
          items:
            type: string