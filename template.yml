AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: Reddit Subtopic Cache

Resources:
  GetSubtopic:
    Type: AWS::Serverless::Function
    Properties:
      Handler: org.yajac.reddit.lambda.RedditCacheReadHandler
      Runtime: java8
      #CodeUri: ./target/RedditTopicCache-1.0.jar
      Timeout: 30
      MemorySize: 512
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /{subtopic}
            Method: get
  CacheSubTopic:
    Type: AWS::Serverless::Function
    Properties:
      Handler: org.yajac.reddit.lambda.RedditCacheWriteHandler
      Runtime: java8
      #CodeUri: ./target/RedditTopicCache-1.0.jar
      Timeout: 30
      MemorySize: 512
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        PutEvent:
          Type: Api
          Properties:
            Path: /{subtopic}
            Method: put
#  GatewayResponse:
#    Type: "AWS::ApiGateway::Model"
#    Properties:
#      RestApiId:
#            Ref: "GetSubtopic"
#      ContentType: "application/json"
#      Description: "Schema for GatewayResponse"
#      Name: GatewayResponse
#      Schema:
#        "$schema": "http://json-schema.org/draft-04/schema#"
#        title: GatewayResponse
#        type: object
#        items:
#          type: object
